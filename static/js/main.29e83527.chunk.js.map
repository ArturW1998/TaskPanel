{"version":3,"sources":["components/Dashboard/styles.module.css","components/ArtworksList/styles.module.css","components/NavBar/styles.module.css","components/NotesList/styles.module.css","redux/reducers/notes.js","redux/reducers/index.js","redux/actions/notes.js","components/NavBar/index.js","components/Pages/Home/index.js","components/Dashboard/index.js","components/Pages/Artists/index.js","components/ArtworksList/index.js","components/Pages/Artworks/index.js","components/NotesList/index.js","components/Pages/Notes/index.js","App.js","redux/store/configureStore.js","serviceWorker.js","index.js"],"names":["module","exports","dashboard","header","artist-row","active-artist-row","artist-avatar","spotlight","spotlight-img","spotlight-label","artwork-list","artwork-row","active-artwork-row","artwork-avatar","nav-bar","link","active-link","note-list","add-note","note-list-item","initState","load","namespace","notes","length","rootReducer","combineReducers","state","arguments","undefined","action","type","concat","Object","toConsumableArray","slice","afterIndex","text","NavBar","_renderLink","page","i","react_default","a","createElement","NavLink","key","className","styles","activeClassName","to","map","this","Component","withRouter","Home","components_NavBar","Dashboard","renderArtistList","_this","props","artists","artist","_id","firstName","lastName","style","backgroundImage","renderSpotLight","_this$props","params","match","selectedArtistId","artistId","artistInSpotlight","find","label","imgUrl","Artists","components_Dashboard","ArtworksList","renderArtworkList","artworks","artwork","title","selectedArtworkId","artworkId","artworkInSpotlight","Artworks","components_ArtworksList","enhance","connect","_ref","addNote","renderNote","note","renderAddButton","index","data-index","onClick","onAddButtonClick","e","window","prompt","target","dataset","alert","_this2","Notes","components_NotesList","store","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","save","configureStore","App","es","HashRouter","Switch","Route","exact","path","component","HomePage","NotesPage","ArtistsPage","ArtworksPage","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.29e83527.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"styles_dashboard__1YrEp\",\"header\":\"styles_header__1EUbM\",\"artist-row\":\"styles_artist-row__2rcHa\",\"active-artist-row\":\"styles_active-artist-row__EeOL8\",\"artist-avatar\":\"styles_artist-avatar__2NPWW\",\"spotlight\":\"styles_spotlight__1j0Au\",\"spotlight-img\":\"styles_spotlight-img__3U6jr\",\"spotlight-label\":\"styles_spotlight-label__3FDs0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"artwork-list\":\"styles_artwork-list__1PZBf\",\"header\":\"styles_header__2wkiE\",\"artwork-row\":\"styles_artwork-row__3rtAk\",\"active-artwork-row\":\"styles_active-artwork-row__3HHrQ\",\"artwork-avatar\":\"styles_artwork-avatar__1Euld\",\"spotlight\":\"styles_spotlight__2xHbF\",\"spotlight-img\":\"styles_spotlight-img__1a4lM\",\"spotlight-label\":\"styles_spotlight-label__1zCNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-bar\":\"styles_nav-bar__3V52z\",\"link\":\"styles_link__2qSb0\",\"active-link\":\"styles_active-link__29aSE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note-list\":\"styles_note-list__2cBw9\",\"add-note\":\"styles_add-note__-W4lB\",\"note-list-item\":\"styles_note-list-item__3spRs\"};","import { load } from 'redux-localstorage-simple';\nimport { ADD_NOTE } from \"../actions/notes\";\n\nlet initState = load({ namespace: 'todo-list' });\n\nif (!initState || !initState.notes || !initState.notes.length) {\n  initState = {\n    notes: [\"note 1\", \"note 2\", \"note 3\", \"note 4\"],\n  }\n}\n\nexport default (state = initState.notes, action) => {\n  switch (action.type) {\n    case ADD_NOTE:\n      return [\n        ...state.slice(0, action.afterIndex + 2),\n        action.text,\n        ...state.slice(action.afterIndex + 2)\n      ];\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport notes from './notes';\n\nconst rootReducer = combineReducers({\n  notes\n});\n\nexport default rootReducer;","export const ADD_NOTE = \"ADD_NOTE\";\n\nexport const addNote = (text, afterIndex) => {\n  return {\n    type: ADD_NOTE,\n    text,\n    afterIndex\n  };\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\n\nimport styles from \"./styles.module.css\";\n\nclass NavBar extends Component {\n  render() {\n    const pages = [\"notes\", \"artists\", \"artworks\"];\n\n    return (\n      <div className={styles[\"nav-bar\"]}>\n        {pages.map(this._renderLink)}\n      </div>\n    );\n  }\n\n  _renderLink = (page, i = -1) => {\n    return (\n      <NavLink\n        key={i}\n        className={styles[\"link\"]}\n        activeClassName={styles[\"active-link\"]}\n        to={`/${page}`}\n      >\n        {page}\n      </NavLink>\n    );\n  }\n}\n\nexport default withRouter(NavBar);\n","import React from \"react\";\n\nimport NavBar from \"../../NavBar\";\n\nexport default () => (\n  <div>\n    <NavBar />\n  </div>\n);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { NavLink } from 'react-router-dom';\n\nimport styles from \"./styles.module.css\";\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div className={styles['dashboard']}>\n        <div>\n          <h3 className={styles['header']}>Artists</h3>\n          {this.renderArtistList()}\n        </div>\n        {this.renderSpotLight()}\n      </div>\n    );\n  }\n\n  renderArtistList = () => {\n    return this.props.artists.map(artist => {\n      const { _id, firstName, lastName } = artist;\n\n      return (\n        <NavLink\n          key={_id}\n          to={`/artists/${_id}`}\n          className={styles['artist-row']}\n          activeClassName={styles['active-artist-row']}\n        >\n          <div\n            className={styles['artist-avatar']}\n            style={{\n              backgroundImage: `url(imgs/artists/${_id}.png)`\n            }}\n          />\n          <span>{`${firstName} ${lastName}`}</span>\n        </NavLink>\n      );\n    });\n  }\n\n  renderSpotLight = () => {\n    const { match: { params }, artists } = this.props;\n    const selectedArtistId = params && params.artistId;\n    if (!selectedArtistId) {\n      return null;\n    }\n    const artistInSpotlight = artists.find(\n      artist => artist._id === selectedArtistId\n    );\n    const { firstName, lastName, _id } = artistInSpotlight;\n    const label = `${firstName} ${lastName}`;\n\n    const imgUrl = `imgs/artists/${_id}.png`;\n\n    return (\n      <div className={styles['spotlight']}>\n        <div\n          className={styles['spotlight-img']}\n          style={{\n            backgroundImage: `url(${imgUrl})`\n          }}\n        />\n        <div className={styles['spotlight-label']}>{label}</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Dashboard);\n","import React from \"react\";\n\nimport NavBar from \"../../NavBar\";\nimport Dashboard from \"../../Dashboard\";\n\nconst artists = [\n  { _id: \"1\", firstName: \"Annie\", lastName: \"Walker\" },\n  { _id: \"2\", firstName: \"Lynda\", lastName: \"Dubovich\" },\n  { _id: \"3\", firstName: \"Jessica\", lastName: \"Gonsalez\" },\n  { _id: \"4\", firstName: \"Kate\", lastName: \"Banksy\" }\n];\n\nexport default () => {\n  return (\n    <div>\n      <NavBar />\n      <Dashboard artists={artists} />\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { NavLink } from 'react-router-dom';\n\nimport styles from \"./styles.module.css\";\n\nclass ArtworksList extends Component {\n  render() {\n    return (\n      <div className={styles['artwork-list']}>\n        <div>\n          <h3 className={styles['header']}>Artworks</h3>\n          {this.renderArtworkList()}\n        </div>\n        {this.renderSpotLight()}\n      </div>\n    );\n  }\n\n  renderArtworkList = () => {\n    return this.props.artworks.map(artwork => {\n      const { _id, title } = artwork;\n\n      return (\n        <NavLink\n          key={_id}\n          to={`/artworks/${_id}`}\n          className={styles['artwork-row']}\n          activeClassName={styles['active-artwork-row']}\n        >\n          <div\n            className={styles['artwork-avatar']}\n            style={{\n              backgroundImage: `url(imgs/artworks/${_id}.jpg)`\n            }}\n          />\n          <span>{`${title}`}</span>\n        </NavLink>\n      );\n    });\n  }\n\n  renderSpotLight = () => {\n    const { match: { params }, artworks } = this.props;\n    const selectedArtworkId = params && params.artworkId;\n    if (!selectedArtworkId) {\n      return null;\n    }\n    const artworkInSpotlight = artworks.find(\n      artwork => artwork._id === selectedArtworkId\n    );\n    const { title, _id } = artworkInSpotlight;\n    const label = `${title}`;\n    const imgUrl = `imgs/artworks/${_id}.jpg`;\n\n    return (\n      <div className={styles['spotlight']}>\n        <div\n          className={styles['spotlight-img']}\n          style={{\n            backgroundImage: `url(${imgUrl})`\n          }}\n        />\n        <div className={styles['spotlight-label']}>{label}</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ArtworksList);\n","import React from \"react\";\n\nimport NavBar from \"../../NavBar\";\nimport ArtworksList from \"../../ArtworksList\";\n\nconst artworks = [\n  { _id: \"1\", title: \"In the event of sinking\" },\n  { _id: \"2\", title: \"Refugees in a nutshell\" },\n  { _id: \"3\", title: \"Solidarity\" },\n  { _id: \"4\", title: \"The rehearsal\" }\n];\n\nexport default () => (\n  <div>\n    <NavBar />\n    <ArtworksList artworks={artworks} />\n  </div>\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addNote } from \"../../redux/actions/notes\";\n\nimport styles from \"./styles.module.css\";\n\nconst enhance = connect(\n  ({ notes }) => ({ notes }),\n  { addNote }\n);\n\nclass NotesList extends Component {\n  render() {\n    const { notes } = this.props;\n\n    if (!notes.length) {\n      return this.renderAddButton();\n    }\n\n    return (\n      <ul className={styles[\"note-list\"]}>\n        {notes.map((note, index) => {\n          return (\n            <li key={index}>\n              {this.renderNote(note)}\n              {this.renderAddButton(index)}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n\n  renderNote = note => <div className={styles[\"note-list-item\"]}>{note}</div>;\n\n  renderAddButton = (index = 0) => (\n    <button\n      data-index={index}\n      className={styles[\"add-note\"]}\n      onClick={this.onAddButtonClick}\n    >\n      + add note\n    </button>\n  );\n\n  onAddButtonClick = e => {\n    const text = window.prompt(\"Note text:\");\n\n    if (text) {\n      this.props.addNote(text, e.target.dataset.index - 1);\n    } else if (text === '') {\n      alert('Error! Note has no name.');\n    } else {\n      alert('Operation is over.');\n    }\n  };\n}\n\nexport default enhance(NotesList);\n","import React from \"react\";\n\nimport NavBar from \"../../NavBar\";\nimport NotesList from \"../../NotesList\";\n\nexport default () => (\n  <div>\n    <NavBar />\n    <NotesList />\n  </div>\n);\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport configureStore from \"./redux/store/configureStore\";\n\nimport HomePage from \"./components/Pages/Home\";\nimport ArtistsPage from \"./components/Pages/Artists\";\nimport ArtworksPage from \"./components/Pages/Artworks\";\nimport NotesPage from \"./components/Pages/Notes\";\n\nconst store = configureStore({});\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/notes\" component={NotesPage} />\n            <Route path=\"/artists/:artistId*\" component={ArtistsPage} />\n            <Route path=\"/artworks/:artworkId*\" component={ArtworksPage} />\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers/';\nimport { save } from 'redux-localstorage-simple';\n\nexport default preloadedState => {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n\n  return createStore(\n    rootReducer,\n    preloadedState,\n    composeEnhancers(\n      applyMiddleware(save({ namespace: 'todo-list' }))\n    ),\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}